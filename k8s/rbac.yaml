apiVersion: v1
kind: ServiceAccount
metadata:
  name: fo3-wallet-service-account
  namespace: fo3-wallet
  labels:
    app.kubernetes.io/name: fo3-wallet-core
    app.kubernetes.io/component: rbac
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/fo3-wallet-pod-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: fo3-wallet-role
  namespace: fo3-wallet
  labels:
    app.kubernetes.io/name: fo3-wallet-core
    app.kubernetes.io/component: rbac
rules:
# Pod management permissions
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
# ConfigMap and Secret access
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Service discovery
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
# Metrics and monitoring
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics", "nodes/stats"]
  verbs: ["get", "list"]
# Events for debugging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fo3-wallet-role-binding
  namespace: fo3-wallet
  labels:
    app.kubernetes.io/name: fo3-wallet-core
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: fo3-wallet-service-account
  namespace: fo3-wallet
roleRef:
  kind: Role
  name: fo3-wallet-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fo3-wallet-cluster-role
  labels:
    app.kubernetes.io/name: fo3-wallet-core
    app.kubernetes.io/component: rbac
rules:
# Node metrics access for monitoring
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics"]
  verbs: ["get", "list"]
# Custom resource definitions for operators
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list"]
# Metrics server access
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fo3-wallet-cluster-role-binding
  labels:
    app.kubernetes.io/name: fo3-wallet-core
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: fo3-wallet-service-account
  namespace: fo3-wallet
roleRef:
  kind: ClusterRole
  name: fo3-wallet-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# Service Account for monitoring components
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fo3-monitoring-service-account
  namespace: fo3-wallet
  labels:
    app.kubernetes.io/name: fo3-monitoring
    app.kubernetes.io/component: rbac
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fo3-monitoring-cluster-role
  labels:
    app.kubernetes.io/name: fo3-monitoring
    app.kubernetes.io/component: rbac
rules:
# Prometheus monitoring permissions
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "nodes/metrics", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fo3-monitoring-cluster-role-binding
  labels:
    app.kubernetes.io/name: fo3-monitoring
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: fo3-monitoring-service-account
  namespace: fo3-wallet
roleRef:
  kind: ClusterRole
  name: fo3-monitoring-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# Network Policies for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fo3-wallet-network-policy
  namespace: fo3-wallet
  labels:
    app.kubernetes.io/name: fo3-wallet-core
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: fo3-wallet-core
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from load balancer
  - from: []
    ports:
    - protocol: TCP
      port: 50051
    - protocol: TCP
      port: 8080
  # Allow ingress from monitoring
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: fo3-prometheus
    ports:
    - protocol: TCP
      port: 9090
  # Allow ingress from same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: fo3-wallet
  egress:
  # Allow egress to database
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: fo3-postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow egress to Redis
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: fo3-redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to monitoring
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: fo3-jaeger
    ports:
    - protocol: TCP
      port: 14268
  # Allow egress to external services (blockchain RPCs, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fo3-database-network-policy
  namespace: fo3-wallet
  labels:
    app.kubernetes.io/name: fo3-postgres
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: fo3-postgres
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from FO3 Wallet Core
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: fo3-wallet-core
    ports:
    - protocol: TCP
      port: 5432
  # Allow ingress from monitoring
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: fo3-prometheus
    ports:
    - protocol: TCP
      port: 9187
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fo3-redis-network-policy
  namespace: fo3-wallet
  labels:
    app.kubernetes.io/name: fo3-redis
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: fo3-redis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from FO3 Wallet Core
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: fo3-wallet-core
    ports:
    - protocol: TCP
      port: 6379
  # Allow ingress from monitoring
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: fo3-prometheus
    ports:
    - protocol: TCP
      port: 9121
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
